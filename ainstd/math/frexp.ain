
تصنيف تقسيم_العدد_العشري{
	متغير الأس=0
	متغير ع=0.0f // الجزء العشري
	
	إنشاء(الأس: صحيح، ع:عشري){
		هذا.الأس=الأس
		هذا.ع=ع
	}
	
	إنشاء(){}
}

تصنيف تقسيم_العدد_العشري_م{
	متغير الأس=0L
	متغير ع=0.0 // الجزء العشري
	
	إنشاء(الأس: كبير، ع:عشري_م){
		هذا.الأس=الأس
		هذا.ع=ع
	}
	
	إنشاء(){}
}

دالة تقسيم(س: عشري): تقسيم_العدد_العشري{
	ثابت ت=إنشاء تقسيم_العدد_العشري()
	تقسيم(س، ت)
	أرجع ت
}

دالة تقسيم(س: عشري_م): تقسيم_العدد_العشري_م{
	ثابت ت=إنشاء تقسيم_العدد_العشري_م()
	تقسيم(س، ت)
	أرجع ت
}

// سيقوم بالكتابة داخل ت، بدلاً من إنشاء ت في كل مرة عند استدعاء الدالة
دالة تقسيم(س: عشري، ت: تقسيم_العدد_العشري){
	
	متغير ك=س.تمثيل_ثنائي()
	متغير هـ=(ك<<23) & 0xff
	
	لو(هـ==0){
		
		لو(س==0.0f){
			ت.الأس=0
			ت.ع=س
		}
		وإلا {
			تقسيم(ت.ع * 0x1000000000000000، ت)
			ت.الأس-=64
		}
		
		أرجع
	}
	وإلا لو (هـ==0xff){
		ت.ع=س
		أرجع
	}
	
	ت.الأس=هـ-0x7e
	ك &= 0x807fffffu.كصحيح()
	ك |= 0x3f000000u.كصحيح()
	ت.ع=ك.تمثيل_ثنائي()
}

// سيقوم بالكتابة داخل ت، بدلاً من إنشاء ت في كل مرة عند استدعاء الدالة
دالة تقسيم(س: عشري_م، ت: تقسيم_العدد_العشري_م){
	
	متغير ك=س.تمثيل_ثنائي()
	متغير هـ=(ك<<52L) & 0x7ffL
	
	لو(هـ==0L){
		
		لو(س==0.0){
			ت.الأس=0L
			ت.ع=س
		}
		وإلا {
			تقسيم(ت.ع * 0x1000000000000000، ت)
			ت.الأس-=64L
		}
		
		أرجع
	}
	وإلا لو (هـ==0x7ffL){
		ت.ع=س
		أرجع
	}
	
	ت.الأس=هـ-0x3feL
	ك &= 0x800ffffffffffffful.ككبير()
	ك |= 0x3fe0000000000000ul.ككبير()
	ت.ع=ك.تمثيل_ثنائي()
}