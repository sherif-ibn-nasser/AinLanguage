
دالة كنص(ن:م1، م:[م1]){
	كنص(ن._م8()، م، 0م8)
}
/*
دالة كنص(ن:م2، م:[م1]){
	كنص(ن._م8()، م، 0م8)
}
*/
دالة كنص(ن:م4، م:[م1]){
	كنص(ن._م8()، م، 0م8)
}

دالة كنص(ن:م8، م:[م1]){
	كنص(ن، م، 0م8)
}

دالة كنص(ن:م1، م:[م1]، ابدأ_من:م8){
	كنص(ن._م8()، م، ابدأ_من)
}
/*
دالة كنص(ن:م2، م:[م1]، ابدأ_من:م8){
	كنص(ن._م8()، م، ابدأ_من)
}
*/
دالة كنص(ن:م4، م:[م1]، ابدأ_من:م8){
	كنص(ن._م8()، م، ابدأ_من)
}

دالة كنص(ن:م8، م:[م1]، ابدأ_من:م8){
	
	حجز متغير س=ن
	حجز متغير ك=ابدأ_من
	
	حجز ل=أقرب_مضاعف_عشرة(س)
	
	طالما(ك<م.السعة&&ل>=1م8){
		م[ك++]=0x30م1+(س/ل)._م1()
		س%=ل
		ل/=10م8
	}
}

// هذا قد يكون أسرع من العداد
تخصيص دالة أقرب_مضاعف_عشرة(ن:م8):م8{
	لو(ن>=10,000,000,000,000,000,000م8) أرجع 10,000,000,000,000,000,000م8
	لو(ن>=1,000,000,000,000,000,000م8) أرجع 1,000,000,000,000,000,000م8
	لو(ن>=100,000,000,000,000,000م8) أرجع 100,000,000,000,000,000م8
	لو(ن>=10,000,000,000,000,000م8) أرجع 10,000,000,000,000,000م8
	لو(ن>=1,000,000,000,000,000م8) أرجع 1,000,000,000,000,000م8
	لو(ن>=100,000,000,000,000م8) أرجع 100,000,000,000,000م8
	لو(ن>=10,000,000,000,000م8) أرجع 10,000,000,000,000م8
	لو(ن>=1,000,000,000,000م8) أرجع 1,000,000,000,000م8
	لو(ن>=100,000,000,000م8) أرجع 100,000,000,000م8
	لو(ن>=10,000,000,000م8) أرجع 10,000,000,000م8
	لو(ن>=1,000,000,000م8) أرجع 1,000,000,000م8
	لو(ن>=100,000,000م8) أرجع 100,000,000م8
	لو(ن>=10,000,000م8) أرجع 10,000,000م8
	لو(ن>=1,000,000م8) أرجع 1,000,000م8
	لو(ن>=100,000م8) أرجع 100,000م8
	لو(ن>=10,000م8) أرجع 10,000م8
	لو(ن>=1,000م8) أرجع 1000م8
	لو(ن>=100م8) أرجع 100م8
	لو(ن>=10م8) أرجع 10م8
	أرجع 1م8
}