
تصنيف تقسيم_ع4{
	حجز متغير الأس=0
	حجز متغير ع=0.0ع4 // الجزء العشري
	
	إنشاء(الأس: ص4، ع:ع4){
		هذا.الأس=الأس
		هذا.ع=ع
	}
	
	إنشاء(){}
}

تصنيف تقسيم_ع8{
	حجز متغير الأس=0ص8
	حجز متغير ع=0.0 // الجزء العشري
	
	إنشاء(الأس: ص8، ع:ع8){
		هذا.الأس=الأس
		هذا.ع=ع
	}
	
	إنشاء(){}
}

دالة تقسيم(س: ع4): تقسيم_ع4{
	حجز ت=إنشاء تقسيم_ع4()
	تقسيم(س، ت)
	أرجع ت
}

دالة تقسيم(س: ع8): تقسيم_ع8{
	حجز ت=إنشاء تقسيم_ع8()
	تقسيم(س، ت)
	أرجع ت
}

// سيقوم بالكتابة داخل ت، بدلاً من إنشاء ت في كل مرة عند استدعاء الدالة
دالة تقسيم(س: ع4، ت: تقسيم_ع4){
	
	حجز متغير ك=س.تمثيل_ثنائي()
	حجز متغير هـ=(ك<<23) & 0xff
	
	لو(هـ==0){
		
		لو(س==0.0ع4){
			ت.الأس=0
			ت.ع=س
		}
		وإلا {
			تقسيم(ت.ع * 0x1000000000000000، ت)
			ت.الأس-=64
		}
		
		أرجع
	}
	وإلا لو (هـ==0xff){
		ت.ع=س
		أرجع
	}
	
	ت.الأس=هـ-0x7e
	ك &= 0x807fffffم4.كصحيح()
	ك |= 0x3f000000م4.كصحيح()
	ت.ع=ك.تمثيل_ثنائي()
}

// سيقوم بالكتابة داخل ت، بدلاً من إنشاء ت في كل مرة عند استدعاء الدالة
دالة تقسيم(س: ع8، ت: تقسيم_ع8){
	
	حجز متغير ك=س.تمثيل_ثنائي()
	حجز متغير هـ=(ك<<52ص8) & 0x7ffص8
	
	لو(هـ==0ص8){
		
		لو(س==0.0){
			ت.الأس=0ص8
			ت.ع=س
		}
		وإلا {
			تقسيم(ت.ع * 0x1000000000000000، ت)
			ت.الأس-=64ص8
		}
		
		أرجع
	}
	وإلا لو (هـ==0x7ffص8){
		ت.ع=س
		أرجع
	}
	
	ت.الأس=هـ-0x3feص8
	ك &= 0x800fffffffffffffم8.ككبير()
	ك |= 0x3fe0000000000000م8.ككبير()
	ت.ع=ك.تمثيل_ثنائي()
}